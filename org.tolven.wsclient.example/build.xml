<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="deploy-to-local-repository" name="org.tolven.wsclient.example">
	<!-- 
	Build file for org.tolven.wsclient.example 
	-->
	<import file="../plugin/buildImport.xml" />

	<property name="buildFolder" value="build" />
	<!-- 
	Source code will be included in the devLib jar file if true. Otherwise, source code
	known to this build script (in the sources folder) will not be added to the plugin.
	Source code may be published in devLib for several reasons: 1) remote-debugging, 
	2) it meets the obligation to make source code available with most open-source licenses,
	3) Provides a way to verify that a particular plugin version has a particular 
	source-code change. But this is not a substitute for source-code management tools.
	 -->
	<property name="includeSourceInDevLib" value="true" />

	<!-- 
	The "build-plugin" target builds one or more sections, each section consisting of a source directory and
	any other files needed by the manifest/tolven-plugin.xml. You are free to remove any sections that you don't use
	and add sections if needed. In any case, the folders (sections) mentioned here should correspond to the filters
	mentioned in the manifest.
	-->
	<target name="build-plugin" depends="init" description="Build all sections of this plugin">
		<zip destfile="${zipFileName}">
			<!-- Add Manifest section -->
			<zipfileset dir="manifest" />
		</zip>
		<!-- Begin list of sections to build. Each section is added to the plugin zip file. -->
		<!-- End of list of sections to build -->
		<antcall target="buildSection">
			<param name="section" value="client"/>
			<param name="lib" value="lib/webservices-api.jar:lib/webservices-extra-api.jar:lib/webservices-extra-jdk-packages.jar:lib/webservices-extra.jar:lib/webservices-rt.jar:lib/webservices-tools.jar" />
			<param name="endorseddirs" value="${basedir}/lib" />
		</antcall>
		<!-- Add DevLib.jar to plugin zip -->
		<zip destfile="${zipFileName}" update="true">
			<zipfileset dir="${buildFolder}">
				<include name="devLib.jar" />
			</zipfileset>
		</zip>
	</target>

	<!-- This target can only be used after the generate-ws-clients target is executed against a running instance of Tolven -->
	<target name="build-wsclient-jar" depends="init" description="Build tolven-wsclient-examples.jar">
		<antcall target="buildSection">
			<param name="section" value="client" />
			<param name="lib" value="lib/webservices-api.jar:lib/webservices-extra-api.jar:lib/webservices-extra-jdk-packages.jar:lib/webservices-extra.jar:lib/webservices-rt.jar:lib/webservices-tools.jar" />
			<param name="endorseddirs" value="${basedir}/lib" />
		</antcall>
		<jar destfile="${buildFolder}/tolven-wsclient-examples.jar">
			<zipfileset dir="${buildFolder}/client/classes" />
		</jar>
	</target>
	
	<target name="generate-ws-clients" depends="init" description="Generate clients from WSDL locations at localhost webserver">
		<antcall target="generate-EchoWebServiceClient"/>
		<antcall target="generate-GeneratorWebServiceClient"/>
		<antcall target="generate-DocumentWebServiceClient"/>
		<antcall target="generate-TrimWebServiceClient"/>
	</target>
	<target name="generate-EchoWebServiceClient" depends="init" description="EchoWebServiceClient from WSDL at localhost webserver">
		<delete>
			<fileset dir="client/source">
				<include name="**/ws/echo/jaxws/*"/>
			</fileset>
		</delete>
		<wsimport
			wsdl="http://dev.able.com:8080/ws/echo?wsdl"
			package="org.tolven.client.examples.ws.echo.jaxws"
			sourcedestdir="client/source"
			xendorsed="true"
			xnocompile="true"/>
	</target>
	<target name="generate-GeneratorWebServiceClient" depends="init" description="GeneratorWebServiceClient from WSDL at localhost webserver">
		<delete>
			<fileset dir="client/source">
				<include name="**/ws/generator/jaxws/*"/>
			</fileset>
		</delete>
		<wsimport
			wsdl="http://dev.able.com:8080/ws/generator?wsdl"
			package="org.tolven.client.examples.ws.generator.jaxws"
			sourcedestdir="client/source"
			xendorsed="true"
			xnocompile="true"/>
	</target>
	<target name="generate-DocumentWebServiceClient" depends="init" description="DocumentWebServiceClient from WSDL at localhost webserver">
		<delete>
			<fileset dir="client/source">
				<include name="**/ws/document/jaxws/*"/>
			</fileset>
		</delete>
		<wsimport
			wsdl="http://dev.able.com:8080/ws/document?wsdl"
			package="org.tolven.client.examples.ws.document.jaxws"
			sourcedestdir="client/source"
			xendorsed="true"
			xnocompile="true"/>
	</target>
	<target name="generate-TrimWebServiceClient" depends="init" description="TrimWebServiceClient from WSDL at localhost webserver">
		<delete>
			<fileset dir="client/source">
				<include name="**/ws/trim/jaxws/*"/>
			</fileset>
		</delete>
		<wsimport
			wsdl="http://dev.able.com:8080/ws/trim?wsdl"
			package="org.tolven.client.examples.ws.trim.jaxws"
			sourcedestdir="client/source"
			xendorsed="true"
			xnocompile="true"/>
	</target>
	<taskdef name="wsimport" classname="com.sun.tools.ws.ant.WsImport">
		<classpath>
			<path>
				<fileset dir="lib">
					<include name="*.jar" />
				</fileset>
			</path>
		</classpath>
	</taskdef>
	<target name="javadoc" description="Generate Javadoc for this plugin">
		<javadoc access="public" author="true" destdir="${respositoryLocal.location}/javadoc/${plugin(id)}-${plugin(version)}" doctitle="Tolven Web Services Client"
			packagenames="*"
			classpathref="project.classpath" 
			source="1.6" sourcepath="client/source" splitindex="true" use="true" version="true"
			encoding="UTF-8" docencoding="UTF-8"/>
	</target>
</project>
